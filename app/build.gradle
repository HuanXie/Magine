apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: "kotlin-kapt"

android {
    compileSdkVersion versions.compile_sdk
    defaultConfig {
        applicationId "com.example.basemvvm"
        minSdkVersion versions.min_sdk
        targetSdkVersion versions.target_sdk
        vectorDrawables.useSupportLibrary = true
        versionCode versions.version_code
        versionName versions.version_name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BASE_URL", '"http://api.tvmaze.com"'
        }
        debug {
            minifyEnabled false
            buildConfigField "String", "BASE_URL", '"http://api.tvmaze.com"'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:$versions.appcompat"
    implementation "androidx.media:media:$versions.media"
    implementation "androidx.fragment:fragment:$versions.androidx"
    implementation "androidx.recyclerview:recyclerview:$versions.androidx"
    implementation "androidx.cardview:cardview:$versions.cardview"
    implementation "androidx.legacy:legacy-support-v4:$versions.androidx"
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
    implementation "com.google.android.material:material:$versions.androidx"

    kapt "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
    implementation "com.google.dagger:dagger:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"

    implementation "com.github.bumptech.glide:glide:$versions.glide"
    annotationProcessor "com.github.bumptech.glide:compiler:$versions.glide"

    //network
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
    implementation "com.squareup.okhttp3:okhttp:$versions.okhttp"

    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$versions.coroutines_adapter"

    kapt "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
    implementation "com.google.dagger:dagger:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"

    testImplementation "junit:junit:$versions.junit"
    androidTestImplementation "androidx.test:runner:$versions.test_runner"
    androidTestImplementation "androidx.test:rules:$versions.test_runner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"
}
